import { Component ,Output, EventEmitter } from '@angular/core';

import { FlaskSignatureService } from '../flask-signature.service';
@Component({
  selector: 'app-popop-image',
  templateUrl: './popop-image.component.html',
  styleUrl: './popop-image.component.css'
})
export class PopopImageComponent {
  Va=true
  fileSelected: boolean = false;
  selectedFile: File | null = null;
  safemessage =false
  dangermessage=false
  Message_response=false
  constructor( private FlaskSignatureService:FlaskSignatureService) {}
  public backgroundImage: string | undefined;
  @Output() close: EventEmitter<void> = new EventEmitter<void>();
  closePopup() {
    this.close.emit();

  }

  onFileSelected(event: any): void {
    const files: FileList = (event.target as HTMLInputElement).files!;
    if (files && files.length > 0) {
      this.selectedFile = files.item(0);
      this.fileSelected = true;
      
      console.log('Image uploaded successfully:', this.selectedFile);
      // Set the background image if selectedFile is not null
      if (this.selectedFile) {
        this.setBackgroundImage(this.selectedFile);
      }
    } else {
      this.selectedFile = null;
      this.fileSelected = false;
    }
  }
  


  setBackgroundImage(file: File): void {
    const reader = new FileReader();
    reader.onload = (e) => {
      this.backgroundImage = `url(${reader.result})`;
    };
    reader.readAsDataURL(file);
  }

  uploadImage(): void {
    console.log("hello wrd")
    if (this.selectedFile) {
      const formData = new FormData();
      formData.append('file', this.selectedFile);
      this.FlaskSignatureService.postDataImage(this.selectedFile).subscribe({
        next: (response) => {
          console.log(response)
          this.Message_response=response.predicted_class
        },
        error: (error) => {
          console.error('Error uploading file:', error);
         console.log( 'Error uploading file');
        }       
      });
    }
  }

}


