import { Component ,Output, EventEmitter ,ElementRef, ViewChild} from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { FlaskSignatureService } from '../flask-signature.service';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-popop-signature',
  templateUrl: './popop-signature.component.html',
  styleUrl: './popop-signature.component.css'
})
export class PopopSignatureComponent {

  constructor(private http: HttpClient, private FlaskSignatureService:FlaskSignatureService) {}
  @ViewChild('fileInput') fileInput!: ElementRef<HTMLInputElement>;
  fileSelected: boolean = false;
  selectedFile: File | null = null;
  safemessage =false
  dangermessage=false


  Va=true
  public backgroundImage: string | undefined;
  @Output() close: EventEmitter<void> = new EventEmitter<void>();
  closePopup() {
    this.close.emit();
    this.safemessage=false
    this.dangermessage=false

  }
  onFileSelected(event: any): void {
    const files: FileList = (event.target as HTMLInputElement).files!;
    if (files && files.length > 0) {
      this.selectedFile = files.item(0);
      this.fileSelected = true;
      console.log('Image uploaded successfully:', this.selectedFile);
      // Replace 'YOUR_API_ENDPOINT' with your actual API endp
    } else {
      this.selectedFile = null;
      this.fileSelected = false;
    }
  }

  uploadImage(): void {
    if (this.selectedFile) {
      const formData = new FormData();
      formData.append('file', this.selectedFile);
      this.FlaskSignatureService.postData(this.selectedFile).subscribe({
        next: (response) => {
          if (response.message[0]==0)
              this.dangermessage=true
          else 
            this.safemessage=true
          console.log( response.message[0]);
        },
        error: (error) => {
          console.error('Error uploading file:', error);
         console.log( 'Error uploading file');
        }       
      });
      
    }
  }
}
